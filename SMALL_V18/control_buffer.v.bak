module control_buffer(input clk0, 
							 input rst_n, 
							 input [47:0]data, 
							 input wire update, 
							 output [7:0]v1, 
							 output [7:0]v2, 
							 output [7:0]v3, 
							 output [7:0]v4, 
							 output [7:0]vdb, 
							 output [7:0]strength);
reg [7:0]v1_temp;
reg [7:0]v2_temp;
reg [7:0]v3_temp;
reg [7:0]v4_temp;
reg [7:0]vdb_temp;
reg [7:0]strength_temp;
always@(posedge clk0 or negedge rst_n)
begin
	if(!rst_n)
	begin
		v1_temp <= 8'b0;
		v2_temp <= 8'b0;
		v3_temp <= 8'b0;
		v4_temp <= 8'b0;
		vdb_temp <= 8'b0;
		strength_temp <= 8'b0;
	end
	else
	begin
		if(update)
		begin
			v1_temp <= data[47:40];
			v2_temp <= data[39:32];
			v3_temp <= data[31:24];
			v4_temp <= data[23:16];
			vdb_temp <= data[15:8];
			strength_temp <= data[7:0];
		end
		else
		begin
			v1_temp = v1_temp;
			v2_temp = v2_temp;
			v3_temp <= v3_temp;
			v4_temp <= v4_temp;
			vdb_temp <= vdb_temp;
			strength_temp <= strength_temp;
		end
	end	
end//always
					 	 
assign v1 = v1_temp;
assign v2 = v2_temp;
assign v3 = v3_temp;
assign v4 = v4_temp;
assign vdb = vdb_temp;
assign strength = strength_temp;
						 
endmodule